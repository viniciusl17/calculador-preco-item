{"ast":null,"code":"var _jsxFileName = \"D:\\\\- PROJETO SUPORTE\\\\calculadora-cmv\\\\src\\\\components\\\\CMVCalculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, TextField, Button, Typography, Grid, Paper, Alert, Collapse, Stack } from '@mui/material';\nimport { Calculate, Clear } from '@mui/icons-material';\n\n// Função para formatar o número para o padrão de moeda BRL (R$)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatCurrency = value => {\n  if (value === null || isNaN(value)) {\n    return '';\n  }\n  return new Intl.NumberFormat('pt-BR', {\n    style: 'currency',\n    currency: 'BRL'\n  }).format(value);\n};\nconst CMVCalculator = () => {\n  _s();\n  const [inputs, setInputs] = useState({\n    materiaPrima: '',\n    maoDeObra: '',\n    outrosCustos: '',\n    quantidade: ''\n  });\n  const [totalCmv, setTotalCmv] = useState(null);\n  const [error, setError] = useState('');\n  const handleCurrencyChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    let formattedValue = value;\n    formattedValue = formattedValue.replace(/\\D/g, '');\n    formattedValue = (Number(formattedValue) / 100).toFixed(2);\n    formattedValue = formattedValue.replace('.', ',');\n    setInputs(prevInputs => ({\n      ...prevInputs,\n      [name]: formattedValue\n    }));\n  };\n  const handleQuantityChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setInputs(prevInputs => ({\n      ...prevInputs,\n      [name]: value\n    }));\n  };\n  const handleCalculate = () => {\n    const {\n      materiaPrima,\n      maoDeObra,\n      outrosCustos,\n      quantidade\n    } = inputs;\n    if (!materiaPrima || !maoDeObra || !outrosCustos || !quantidade) {\n      setError('Por favor, preencha todos os campos.');\n      setTotalCmv(null);\n      return;\n    }\n    const mp = parseFloat(materiaPrima.replace(',', '.'));\n    const mo = parseFloat(maoDeObra.replace(',', '.'));\n    const oc = parseFloat(outrosCustos.replace(',', '.'));\n    const qtd = parseInt(quantidade);\n    if (isNaN(mp) || isNaN(mo) || isNaN(oc) || isNaN(qtd) || qtd <= 0) {\n      setError('Valores inválidos. Verifique os números digitados.');\n      setTotalCmv(null);\n      return;\n    }\n    const custoPorUnidade = mp + mo + oc;\n    const cmvResultado = custoPorUnidade * qtd;\n    setTotalCmv(cmvResultado);\n    setError('');\n  };\n  const handleClear = () => {\n    setInputs({\n      materiaPrima: '',\n      maoDeObra: '',\n      outrosCustos: '',\n      quantidade: ''\n    });\n    setTotalCmv(null);\n    setError('');\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    sx: {\n      p: 4,\n      borderRadius: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      align: \"center\",\n      color: \"text.primary\",\n      children: \"Calculadora de CMV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      gutterBottom: true,\n      align: \"center\",\n      color: \"text.secondary\",\n      sx: {\n        mb: 4\n      },\n      children: \"Preencha os custos por unidade e a quantidade para calcular seu CMV total.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      alignItems: \"flex-start\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 4,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Mat\\xE9ria-prima por unidade (R$)\",\n          name: \"materiaPrima\",\n          variant: \"outlined\",\n          placeholder: \"Ex: 15,00\",\n          value: inputs.materiaPrima,\n          onChange: handleCurrencyChange,\n          inputProps: {\n            inputMode: 'numeric',\n            pattern: '[0-9]*'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 4,\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"M\\xE3o de obra por unidade (R$)\",\n            name: \"maoDeObra\",\n            variant: \"outlined\",\n            placeholder: \"Ex: 5,00\",\n            value: inputs.maoDeObra,\n            onChange: handleCurrencyChange,\n            inputProps: {\n              inputMode: 'numeric',\n              pattern: '[0-9]*'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Quantidade vendida\",\n            name: \"quantidade\",\n            type: \"number\",\n            variant: \"outlined\",\n            placeholder: \"Ex: 100\",\n            value: inputs.quantidade,\n            onChange: handleQuantityChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 4,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Outros custos por unidade (R$)\",\n          name: \"outrosCustos\",\n          variant: \"outlined\",\n          placeholder: \"Ex: 15,00\",\n          value: inputs.outrosCustos,\n          onChange: handleCurrencyChange,\n          inputProps: {\n            inputMode: 'numeric',\n            pattern: '[0-9]*'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      spacing: 2,\n      justifyContent: \"center\",\n      sx: {\n        mt: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        color: \"secondary\",\n        startIcon: /*#__PURE__*/_jsxDEV(Clear, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 22\n        }, this),\n        onClick: handleClear,\n        children: \"Limpar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"large\",\n        startIcon: /*#__PURE__*/_jsxDEV(Calculate, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 22\n        }, this),\n        onClick: handleCalculate,\n        sx: {\n          color: 'white',\n          fontWeight: 'bold'\n        },\n        children: \"Calcular\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n      in: !!error,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mt: 3\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), totalCmv !== null && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4,\n        p: 3,\n        borderRadius: 2,\n        backgroundColor: 'background.default',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        color: \"text.secondary\",\n        children: \"Seu Custo de Mercadoria Vendida (total) \\xE9:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        color: \"primary\",\n        sx: {\n          fontWeight: 'bold'\n        },\n        children: formatCurrency(totalCmv)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(CMVCalculator, \"Rdm6lH1SoRa4/DT3QUb1fwElgkU=\");\n_c = CMVCalculator;\nexport default CMVCalculator;\nvar _c;\n$RefreshReg$(_c, \"CMVCalculator\");","map":{"version":3,"names":["React","useState","Box","TextField","Button","Typography","Grid","Paper","Alert","Collapse","Stack","Calculate","Clear","jsxDEV","_jsxDEV","formatCurrency","value","isNaN","Intl","NumberFormat","style","currency","format","CMVCalculator","_s","inputs","setInputs","materiaPrima","maoDeObra","outrosCustos","quantidade","totalCmv","setTotalCmv","error","setError","handleCurrencyChange","event","name","target","formattedValue","replace","Number","toFixed","prevInputs","handleQuantityChange","handleCalculate","mp","parseFloat","mo","oc","qtd","parseInt","custoPorUnidade","cmvResultado","handleClear","elevation","sx","p","borderRadius","children","variant","gutterBottom","align","color","fileName","_jsxFileName","lineNumber","columnNumber","mb","container","spacing","alignItems","item","xs","sm","fullWidth","label","placeholder","onChange","inputProps","inputMode","pattern","type","direction","justifyContent","mt","startIcon","onClick","size","fontWeight","in","severity","backgroundColor","textAlign","_c","$RefreshReg$"],"sources":["D:/- PROJETO SUPORTE/calculadora-cmv/src/components/CMVCalculator.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  Grid,\r\n  Paper,\r\n  Alert,\r\n  Collapse,\r\n  Stack\r\n} from '@mui/material';\r\nimport { Calculate, Clear } from '@mui/icons-material';\r\n\r\n// Função para formatar o número para o padrão de moeda BRL (R$)\r\nconst formatCurrency = (value) => {\r\n  if (value === null || isNaN(value)) {\r\n    return '';\r\n  }\r\n  return new Intl.NumberFormat('pt-BR', {\r\n    style: 'currency',\r\n    currency: 'BRL',\r\n  }).format(value);\r\n};\r\n\r\nconst CMVCalculator = () => {\r\n  const [inputs, setInputs] = useState({\r\n    materiaPrima: '',\r\n    maoDeObra: '',\r\n    outrosCustos: '',\r\n    quantidade: '',\r\n  });\r\n\r\n  const [totalCmv, setTotalCmv] = useState(null);\r\n  const [error, setError] = useState('');\r\n\r\n  const handleCurrencyChange = (event) => {\r\n    const { name, value } = event.target;\r\n    let formattedValue = value;\r\n    formattedValue = formattedValue.replace(/\\D/g, '');\r\n    formattedValue = (Number(formattedValue) / 100).toFixed(2);\r\n    formattedValue = formattedValue.replace('.', ',');\r\n    setInputs((prevInputs) => ({\r\n      ...prevInputs,\r\n      [name]: formattedValue,\r\n    }));\r\n  };\r\n\r\n  const handleQuantityChange = (event) => {\r\n    const { name, value } = event.target;\r\n     setInputs((prevInputs) => ({\r\n      ...prevInputs,\r\n      [name]: value,\r\n    }));\r\n  }\r\n\r\n  const handleCalculate = () => {\r\n    const { materiaPrima, maoDeObra, outrosCustos, quantidade } = inputs;\r\n\r\n    if (!materiaPrima || !maoDeObra || !outrosCustos || !quantidade) {\r\n      setError('Por favor, preencha todos os campos.');\r\n      setTotalCmv(null);\r\n      return;\r\n    }\r\n\r\n    const mp = parseFloat(materiaPrima.replace(',', '.'));\r\n    const mo = parseFloat(maoDeObra.replace(',', '.'));\r\n    const oc = parseFloat(outrosCustos.replace(',', '.'));\r\n    const qtd = parseInt(quantidade);\r\n\r\n    if (isNaN(mp) || isNaN(mo) || isNaN(oc) || isNaN(qtd) || qtd <= 0) {\r\n        setError('Valores inválidos. Verifique os números digitados.');\r\n        setTotalCmv(null);\r\n        return;\r\n    }\r\n    \r\n    const custoPorUnidade = mp + mo + oc;\r\n    const cmvResultado = custoPorUnidade * qtd;\r\n\r\n    setTotalCmv(cmvResultado);\r\n    setError('');\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setInputs({\r\n      materiaPrima: '',\r\n      maoDeObra: '',\r\n      outrosCustos: '',\r\n      quantidade: '',\r\n    });\r\n    setTotalCmv(null);\r\n    setError('');\r\n  };\r\n\r\n  return (\r\n    <Paper elevation={3} sx={{ p: 4, borderRadius: 2 }}>\r\n      <Typography variant=\"h4\" gutterBottom align=\"center\" color=\"text.primary\">\r\n        Calculadora de CMV\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\" gutterBottom align=\"center\" color=\"text.secondary\" sx={{ mb: 4 }}>\r\n        Preencha os custos por unidade e a quantidade para calcular seu CMV total.\r\n      </Typography>\r\n\r\n      {/* ÁREA DO GRID ATUALIZADA PARA O LAYOUT SOLICITADO */}\r\n      <Grid container spacing={3} alignItems=\"flex-start\">\r\n        {/* Coluna 1: Matéria-prima */}\r\n        <Grid item xs={12} sm={4}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Matéria-prima por unidade (R$)\"\r\n            name=\"materiaPrima\"\r\n            variant=\"outlined\"\r\n            placeholder=\"Ex: 15,00\"\r\n            value={inputs.materiaPrima}\r\n            onChange={handleCurrencyChange}\r\n            inputProps={{ inputMode: 'numeric', pattern: '[0-9]*' }}\r\n          />\r\n        </Grid>\r\n\r\n        {/* Coluna 2: Mão de obra e Quantidade */}\r\n        <Grid item xs={12} sm={4}>\r\n          <Stack spacing={3}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Mão de obra por unidade (R$)\"\r\n              name=\"maoDeObra\"\r\n              variant=\"outlined\"\r\n              placeholder=\"Ex: 5,00\"\r\n              value={inputs.maoDeObra}\r\n              onChange={handleCurrencyChange}\r\n              inputProps={{ inputMode: 'numeric', pattern: '[0-9]*' }}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              label=\"Quantidade vendida\"\r\n              name=\"quantidade\"\r\n              type=\"number\"\r\n              variant=\"outlined\"\r\n              placeholder=\"Ex: 100\"\r\n              value={inputs.quantidade}\r\n              onChange={handleQuantityChange}\r\n            />\r\n          </Stack>\r\n        </Grid>\r\n\r\n        {/* Coluna 3: Outros custos */}\r\n        <Grid item xs={12} sm={4}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Outros custos por unidade (R$)\"\r\n            name=\"outrosCustos\"\r\n            variant=\"outlined\"\r\n            placeholder=\"Ex: 15,00\"\r\n            value={inputs.outrosCustos}\r\n            onChange={handleCurrencyChange}\r\n            inputProps={{ inputMode: 'numeric', pattern: '[0-9]*' }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Stack direction=\"row\" spacing={2} justifyContent=\"center\" sx={{ mt: 4 }}>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n          startIcon={<Clear />}\r\n          onClick={handleClear}\r\n        >\r\n          Limpar\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          size=\"large\"\r\n          startIcon={<Calculate />}\r\n          onClick={handleCalculate}\r\n          sx={{ color: 'white', fontWeight: 'bold' }}\r\n        >\r\n          Calcular\r\n        </Button>\r\n      </Stack>\r\n\r\n      <Collapse in={!!error}>\r\n        <Alert severity=\"error\" sx={{ mt: 3 }}>\r\n          {error}\r\n        </Alert>\r\n      </Collapse>\r\n\r\n      {totalCmv !== null && (\r\n        <Box sx={{ mt: 4, p: 3, borderRadius: 2, backgroundColor: 'background.default', textAlign: 'center' }}>\r\n          <Typography variant=\"h6\" color=\"text.secondary\">\r\n            Seu Custo de Mercadoria Vendida (total) é:\r\n          </Typography>\r\n          <Typography variant=\"h3\" color=\"primary\" sx={{ fontWeight: 'bold' }}>\r\n            {formatCurrency(totalCmv)}\r\n          </Typography>\r\n        </Box>\r\n      )}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CMVCalculator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}